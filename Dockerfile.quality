FROM golang:1.21-alpine

# Build arguments for metadata
ARG VERSION=dev
ARG REVISION=unknown
ARG BUILDTIME=unknown

# Add metadata labels
LABEL org.opencontainers.image.title="CDEvents CLI Quality Tools" \
      org.opencontainers.image.description="Quality analysis tools for CDEvents CLI development" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.revision="${REVISION}" \
      org.opencontainers.image.created="${BUILDTIME}" \
      org.opencontainers.image.source="https://github.com/brunseba/cdevents-tools" \
      org.opencontainers.image.url="https://github.com/brunseba/cdevents-tools" \
      org.opencontainers.image.documentation="https://github.com/brunseba/cdevents-tools/blob/main/README.md" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.vendor="CDEvents Community"

# Install necessary tools
RUN apk add --no-cache git make bash bc ca-certificates

# Install Go tools for code quality
RUN go install github.com/fzipp/gocyclo/cmd/gocyclo@latest && \
    go install golang.org/x/tools/cmd/cover@latest && \
    go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.55.2

# Set working directory
WORKDIR /app

# Copy go.mod and go.sum first for better caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the rest of the application code
COPY . .

# Ensure dependencies are up to date
RUN go mod tidy

# Make the quality script executable
RUN chmod +x scripts/run_quality_metrics.sh || true

# Set default command
CMD ["./scripts/run_quality_metrics.sh"]
